1a--------------------------------------------------------------------------------------------
# ANSWER ME
def calculate(n):
  s = 0.0
  for i in range(n+1):
    s += 1/((4*i + 3)*(4*i + 1)) 
  s *= 8
  return s 
 
 
for val in [10, 100, 10000, 1000000]:
  print(f"{val}, {calculate(val)}, {np.pi - calculate(val)}")


1b--------------------------------------------------------------------------------------------
#ANSWER ME
piList = []

def makelist(n):
  for i in range(n+1):
    piList.append(8/((4*i + 3)*(4*i + 1))) 
  # return myList 

piList = []
makelist(1000000)
piList_cumulative = np.cumsum(np.array(piList))
plt.plot(np.abs(np.pi-piList_cumulative))
plt.xlabel("Term")
plt.ylabel("Deviation of Pi")
plt.title("Pi Approximation")
plt.yscale('log')
plt.show()

1c--------------------------------------------------------------------------------------------

2a--------------------------------------------------------------------------------------------
2b--------------------------------------------------------------------------------------------
2c--------------------------------------------------------------------------------------------
2d--------------------------------------------------------------------------------------------
3a--------------------------------------------------------------------------------------------
3b--------------------------------------------------------------------------------------------
3c--------------------------------------------------------------------------------------------
